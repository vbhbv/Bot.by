import logging
import os
from urllib.parse import quote_plus
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# ----------------------------------------------------
# 1. ุงูุฅุนุฏุงุฏุงุช ุงูุฃูููุฉ
# ----------------------------------------------------

# ุชููุฆุฉ ุงูุชุณุฌูู
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# ----------------------------------------------------
# 2. ุงูุฏูุงู ุงูุฎุงุตุฉ ุจุงูุจูุช (Handlers)
# ----------------------------------------------------

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ุงูุฑุฏ ุนูู ุฃูุฑ /start ูุชูุฏูู ุงูุชุฑุญูุจ."""
    await update.message.reply_text(
        "ุฃููุงู ุจู ูุง ุทุงูุจ ุงูุนูู! ๐ ุฃูุง ุฌุงูุฒ ููุณุงุนุฏุชู.\n"
        "ุฃุฑุณู ูู ุงุณู ุงููุชุงุจ ุงูุฐู ุชุจุญุซ ุนููุ ูุณุฃููุฑ ูู ุฑุงุจุท ุจุญุซ PDF ููุฌู.",
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ุงูุฑุฏ ุนูู ุฃูุฑ /help."""
    await update.message.reply_text("ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู: ุจุจุณุงุทุฉุ ุฃุฑุณู ุงุณู ุงููุชุงุจ ูุชุญุตู ุนูู ุฑุงุจุท ุจุญุซ PDF ุฌุงูุฒ.", parse_mode='Markdown')

async def search_pdf_link(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ุฅูุดุงุก ุฑุงุจุท ุจุญุซ ุฌูุฌู ููุฑูุฒ ุนูู ูููุงุช PDF ูุงูููุชุจุงุช ุงูุนุงูุฉ."""
    query = update.message.text
    
    await update.message.reply_text(f"ุฌุงุฑู ุชุฌููุฒ ุฑูุงุจุท ุงูุจุญุซ ุนู: '{query}'...")

    # 1. ุฑุงุจุท ุงูุจุญุซ ุงููุฑูุฒ ุนูู "ููุชุจุฉ ุงูููุฑ" ูููู PDF
    # ุตูุบุฉ ุงูุจุญุซ: 'site:al-maktaba.org "ุงุณู ุงููุชุงุจ" filetype:pdf'
    alnoor_query = f'site:al-maktaba.org "{query}" filetype:pdf'
    encoded_alnoor = quote_plus(alnoor_query)
    alnoor_url = f"https://www.google.com/search?q={encoded_alnoor}"
    
    # 2. ุฑุงุจุท ุงูุจุญุซ ุงูุนุงู ุนู ุงููุชุงุจ ุจุตูุบุฉ PDF ูู ุฃู ููุงู
    general_query = f'"{query}" filetype:pdf'
    encoded_general = quote_plus(general_query)
    general_url = f"https://www.google.com/search?q={encoded_general}"

    response_text = (
        f"๐ **ูุชุงุฆุฌ ุงูุจุญุซ ุงูููุฌู ุนู: '{query}'** ๐\n\n"
        
        "1. **ุงูุจุญุซ ูู ููุชุจุฉ ุงูููุฑ** (ุบุงูุจุงู ูููู ุงูุฃูุถู ูููุชุจ):\n"
        f"[๐ ุงุถุบุท ููุจุญุซ ูู ููุชุจุฉ ุงูููุฑ]({alnoor_url})\n\n"
        
        "2. **ุงูุจุญุซ ุงูุนุงู ุนู PDF** (ูุตุงุฏุฑ ูููุชุจุงุช ุฃุฎุฑู):\n"
        f"[๐ ุงุถุบุท ููุจุญุซ ูู Google ุนู PDF]({general_url})\n\n"
        
        "**ูุตูุญุฉ:** ุงูุฑูุงุจุท ุฃุนูุงู ุชูุฌูู ูุจุงุดุฑุฉ ููุชุงุฆุฌ ุงูุจุญุซุ ุงุฎุชุฑ ูููุง ูุง ููุงุณุจู.\n"
    )
            
    await update.message.reply_text(response_text, parse_mode='Markdown')

# ----------------------------------------------------
# 3. ุฏุงูุฉ ุงูุชุดุบูู ุงูุฑุฆูุณูุฉ (Main Function)
# ----------------------------------------------------

def main() -> None:
    """ุชุดุบูู ุงูุจูุช ุจุงุณุชุฎุฏุงู Webhooks (ููุงุณุจ ูู Railway/Heroku)."""
    
    # 1. ูุฑุงุกุฉ ุงูุชููู ูู ูุชุบูุฑ ุงูุจูุฆุฉ (ุถุฑูุฑู ููุฃูุงู ูุงููุดุฑ)
    TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN') 
    
    if not TOKEN:
        logger.error("ุฎุทุฃ: ูู ูุชู ุชุญููู ุงูุชููู. ูุฌุจ ุชุนููู ูุชุบูุฑ ุงูุจูุฆุฉ TELEGRAM_BOT_TOKEN.")
        return
        
    # 2. ูุฑุงุกุฉ ุงููููุฐ (PORT) ุงูุฐู ูููุฑู ุงูุฎุงุฏู (ูุซู Railway)
    PORT = int(os.environ.get('PORT', 8080)) # ุงููููุฉ ุงูุงูุชุฑุงุถูุฉ 8080

    # 3. ุจูุงุก ุงูุชุทุจูู
    application = Application.builder().token(TOKEN).build()

    # 4. ุฅุถุงูุฉ Handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, search_pdf_link))

    # 5. ุชุดุบูู Webhook
    logger.info(f"ุงูุจุฏุก ูู ูุถุน Webhook ุนูู ุงููููุฐ: {PORT}")
    
    # ูุฌุจ ุฃู ูููู ุงููุณุงุฑ (url_path) ุณุฑูุงูุ ูุฐูู ูุณุชุฎุฏู ุงูุชููู ููุณู
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN, 
    )

if __name__ == "__main__":
    main()
    
